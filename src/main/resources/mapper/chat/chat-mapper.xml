<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sh.groupware.chat.model.dao.ChatDao">

<select  id="findChattroomIdbyMemberId" resultType="String">
	SELECT 
		chatroom_id
	FROM chat_room
		WHERE emp_id IN (#{empId}, #{myEmpId})
	GROUP BY chatroom_id
	HAVING COUNT(DISTINCT emp_id) = 2
</select>

<insert id="createChatroom">

	insert into 
		chat_room 
		
	values 
		(#{chatroomId},#{empId},0,default,default)
	
</insert>



<select  id="findChatLogBychatroomId" resultMap="chatLogMap">
	select
		*
	from
		chat_log
	where 
		chatroom_id = #{chatroomId} 
		order by no
		
</select>

<insert id="insertChatLog">

	insert into
		chat_log
	values(
		seq_chat_log_no.nextval,#{chatroomId},#{empId},#{msg},
		#{time},#{type}
	)

</insert>

 <select  id="seletChatLogByempId" resultMap="chatLogMap">
	select
	    cl.no,
	    cl.chatroom_id,
	    (select emp_id from chat_room where chatroom_id = cl.chatroom_id and emp_id != #{empId}) emp_id,
	    cl.msg,
	    cl.time,
	    (select count(*) from chat_log where chatroom_id = cl.chatroom_id and time > (select last_check from chat_room where chatroom_id = cl.chatroom_id and emp_id = #{empId})) unread_count,
	    cl.type
	from (
	    select
	        cl.*,
	        row_number() over(partition by chatroom_id order by no desc) rnum
	    from
	        chat_log cl
	    where
	        cl.emp_id = #{empId}
	) cl
	where
	    rnum = 1

</select> 

<select  id="selectYourIdBychatroomId" resultType="String">
	select
		emp_id
	from
		chat_room
	where 
		chatroom_id = #{chatroomId} and emp_id != #{empId}
</select>

<insert  id="updateLastCheck">
	update 
		chat_room
	set
		last_check = #{time} where chatroom_id = #{chatroomId} and emp_id = #{empId}


</insert>




<resultMap type="ChatRoom" id="chatRoomMap"></resultMap>
<resultMap type="ChatLog" id="chatLogMap"> </resultMap>
</mapper>